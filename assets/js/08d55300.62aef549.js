"use strict";(self.webpackChunkjakenelson_cloud=self.webpackChunkjakenelson_cloud||[]).push([[956],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),u=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=u(r),m=n,d=h["".concat(l,".").concat(m)]||h[m]||p[m]||a;return r?i.createElement(d,o(o({ref:t},c),{},{components:r})):i.createElement(d,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7484:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return h}});var i=r(7462),n=r(3366),a=(r(7294),r(3905)),o=["components"],s={id:"github-repository-best-practices",title:"Repository Best Practices",tags:["github","ghe","repository"]},l="Github Repository Best Practices",u={unversionedId:"tech/github/github-repository-best-practices",id:"tech/github/github-repository-best-practices",isDocsHomePage:!1,title:"Repository Best Practices",description:"Security",source:"@site/docs/tech/github/github-repo-best-practices.mdx",sourceDirName:"tech/github",slug:"/tech/github/github-repository-best-practices",permalink:"/docs/tech/github/github-repository-best-practices",editUrl:"https://github.com/Jake-Mok-Nelson/website/tree/main/jakenelson.cloud/docs/tech/github/github-repo-best-practices.mdx",tags:[{label:"github",permalink:"/docs/tags/github"},{label:"ghe",permalink:"/docs/tags/ghe"},{label:"repository",permalink:"/docs/tags/repository"}],version:"current",frontMatter:{id:"github-repository-best-practices",title:"Repository Best Practices",tags:["github","ghe","repository"]},sidebar:"tutorialSidebar",previous:{title:"Team Learning Hours",permalink:"/docs/leadership/team-learning-hour"},next:{title:"Strict Mode Issue With Terraform",permalink:"/docs/tech/github/issue-strict-mode"}},c=[{value:"Security",id:"security",children:[],level:2},{value:"Quality",id:"quality",children:[],level:2},{value:"Hygiene",id:"hygiene",children:[],level:2},{value:"Gotchas",id:"gotchas",children:[],level:2}],p={toc:c};function h(e){var t=e.components,r=(0,n.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"github-repository-best-practices"},"Github Repository Best Practices"),(0,a.kt)("h2",{id:"security"},"Security"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Enable branch protection to restrict who can push to the trunk.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Pull-requests should require the branch be up to date before merge (aka strict mode)."),(0,a.kt)("li",{parentName:"ul"},"There should be at least one required status check (this would be a CI pipeline of some type)."))),(0,a.kt)("li",{parentName:"ul"},"Use security scanning pipelines to check for credentials committed to feature branches."),(0,a.kt)("li",{parentName:"ul"},"Use Codeowners to assign more granular permissions (especially in mono-repos)."),(0,a.kt)("li",{parentName:"ul"},"Assign write privilege only to those that need it, the reason for this is that anyone with write privilege can push tags. This can break deployment patterns that rely on git tags for the versioning of releases."),(0,a.kt)("li",{parentName:"ul"},"Assign merge privilege to those that maintain the repo.")),(0,a.kt)("h2",{id:"quality"},"Quality"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use peer-revier via pull-requests to keep the trunk clean and ensure code qualilty meets the standards set by the team."),(0,a.kt)("li",{parentName:"ul"},"Use CI pipelines to ensure code quality meets the standards set by the team."),(0,a.kt)("li",{parentName:"ul"},"Use meaningful commit messages and PR titles."),(0,a.kt)("li",{parentName:"ul"},"Adhere to commit message and PR title length limits."),(0,a.kt)("li",{parentName:"ul"},"Use commit body to add further detail where requied."),(0,a.kt)("li",{parentName:"ul"},"Repositories should be meaningful, if there isn't a clear purpose to a repository, it's probably too large.")),(0,a.kt)("h2",{id:"hygiene"},"Hygiene"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Remove branches that are no longer needed (espsecially after merged)."),(0,a.kt)("li",{parentName:"ul"},"Always commit using a valid user name and email ",(0,a.kt)("inlineCode",{parentName:"li"},"git config --global user.name <username>")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"git config --global user.email <email address>"),"."),(0,a.kt)("li",{parentName:"ul"},"Tidy forks of repositories when they are no longer needed.")),(0,a.kt)("h2",{id:"gotchas"},"Gotchas"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Github strict mode requires a pipeline be attached to branch protection. ",(0,a.kt)("a",{parentName:"li",href:"/docs/tech/github/issue-strict-mode"},"See more")),(0,a.kt)("li",{parentName:"ul"},"Squash and Merges are useful when the team doesn't have a lot of Git experience but they don't behave like normal merges. Some of the usual scanning methods used in Github repositories don't work well here.")))}h.isMDXComponent=!0}}]);