"use strict";(self.webpackChunkjakenelson_cloud=self.webpackChunkjakenelson_cloud||[]).push([[540],{4768:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return g},toc:function(){return c},default:function(){return l}});var n=t(7462),a=t(3366),s=(t(7294),t(3905)),u=["components"],i={id:"syncing-github-groups-from-azuread",title:"Syncing Users & Groups from AzureAD",tags:["github","ghe","access","azuread"]},o="Syncing Users & Groups from AzureAD",g={unversionedId:"tech/github/syncing-github-groups-from-azuread",id:"tech/github/syncing-github-groups-from-azuread",isDocsHomePage:!1,title:"Syncing Users & Groups from AzureAD",description:"Requirements",source:"@site/docs/tech/github/syncing-github-groups-from-azuread.mdx",sourceDirName:"tech/github",slug:"/tech/github/syncing-github-groups-from-azuread",permalink:"/docs/tech/github/syncing-github-groups-from-azuread",editUrl:"https://github.com/Jake-Mok-Nelson/website/tree/main/jakenelson.cloud/docs/tech/github/syncing-github-groups-from-azuread.mdx",tags:[{label:"github",permalink:"/docs/tags/github"},{label:"ghe",permalink:"/docs/tags/ghe"},{label:"access",permalink:"/docs/tags/access"},{label:"azuread",permalink:"/docs/tags/azuread"}],version:"current",frontMatter:{id:"syncing-github-groups-from-azuread",title:"Syncing Users & Groups from AzureAD",tags:["github","ghe","access","azuread"]},sidebar:"tutorialSidebar",previous:{title:"Strict Mode Issue With Terraform",permalink:"/docs/tech/github/issue-strict-mode"}},c=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Creating the sync",id:"creating-the-sync",children:[],level:2},{value:"Consuming users and teams",id:"consuming-users-and-teams",children:[],level:2}],d={toc:c};function l(e){var r=e.components,t=(0,a.Z)(e,u);return(0,s.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"syncing-users--groups-from-azuread"},"Syncing Users & Groups from AzureAD"),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("p",null,"If users of the organisation are managed via Azure AD or Okta, they can be onboarded using group syncs.\n",(0,s.kt)("a",{parentName:"p",href:"https://registry.terraform.io/providers/integrations/github/latest/docs/resources/team_sync_group_mapping"},"Integrate users directly with Azure AD via sync groups"),"."),(0,s.kt)("p",null,"Azure AD auth requirements for sync:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Global administrator"),(0,s.kt)("li",{parentName:"ul"},"Privileged Role administrator")),(0,s.kt)("h2",{id:"creating-the-sync"},"Creating the sync"),(0,s.kt)("p",null,"To create a synced group from AzureAD use a Terraform configuration like so:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-terraform"},'data "github_organization_team_sync_groups" "this" {}\n\nresource "github_team_sync_group_mapping" "example_group_mapping" {\n  team_slug        = "example"\n\n  dynamic "group" {\n    for_each = [for g in data.github_organization_team_sync_groups.this.groups : g if g.group_name == "some_team_group"]\n    content {\n      group_id          = group.value.group_id\n      group_name        = group.value.group_name\n      group_description = group.value.group_description\n    }\n  }\n}\n\n')),(0,s.kt)("h2",{id:"consuming-users-and-teams"},"Consuming users and teams"),(0,s.kt)("p",null,"Once Onboarded you can consume them via data resources."),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"github_team")," data resource for reading singular teams and the ",(0,s.kt)("inlineCode",{parentName:"p"},"github_teams")," data resource for reading multiple at once."),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"github_user")," data resource for reading singular users and the ",(0,s.kt)("inlineCode",{parentName:"p"},"github_users")," data resource for reading multiple at once."))}l.isMDXComponent=!0}}]);