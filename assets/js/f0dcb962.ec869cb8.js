"use strict";(self.webpackChunkjakenelson_cloud=self.webpackChunkjakenelson_cloud||[]).push([[4540],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,d=p["".concat(s,".").concat(m)]||p[m]||g[m]||o;return t?n.createElement(d,i(i({ref:r},l),{},{components:t})):n.createElement(d,i({ref:r},l))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var u={};for(var s in r)hasOwnProperty.call(r,s)&&(u[s]=r[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4768:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],u={id:"syncing-github-groups-from-azuread",title:"Syncing Users & Groups from AzureAD",tags:["github","ghe","access","azuread"]},s="Syncing Users & Groups from AzureAD",c={unversionedId:"tech/github/syncing-github-groups-from-azuread",id:"tech/github/syncing-github-groups-from-azuread",title:"Syncing Users & Groups from AzureAD",description:"Requirements",source:"@site/docs/tech/github/syncing-github-groups-from-azuread.mdx",sourceDirName:"tech/github",slug:"/tech/github/syncing-github-groups-from-azuread",permalink:"/docs/tech/github/syncing-github-groups-from-azuread",editUrl:"https://github.com/Jake-Mok-Nelson/website/tree/main/jakenelson.cloud/docs/tech/github/syncing-github-groups-from-azuread.mdx",tags:[{label:"github",permalink:"/docs/tags/github"},{label:"ghe",permalink:"/docs/tags/ghe"},{label:"access",permalink:"/docs/tags/access"},{label:"azuread",permalink:"/docs/tags/azuread"}],version:"current",frontMatter:{id:"syncing-github-groups-from-azuread",title:"Syncing Users & Groups from AzureAD",tags:["github","ghe","access","azuread"]},sidebar:"tutorialSidebar",previous:{title:"Strict Mode Issue With Terraform",permalink:"/docs/tech/github/issue-strict-mode"},next:{title:"Terraform Conditionals",permalink:"/docs/tech/terraform/terraform-conditionals"}},l=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Creating the sync",id:"creating-the-sync",children:[],level:2},{value:"Consuming users and teams",id:"consuming-users-and-teams",children:[],level:2}],g={toc:l};function p(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"syncing-users--groups-from-azuread"},"Syncing Users & Groups from AzureAD"),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"If users of the organisation are managed via Azure AD or Okta, they can be onboarded using group syncs.\n",(0,o.kt)("a",{parentName:"p",href:"https://registry.terraform.io/providers/integrations/github/latest/docs/resources/team_sync_group_mapping"},"Integrate users directly with Azure AD via sync groups"),"."),(0,o.kt)("p",null,"Azure AD auth requirements for sync:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Global administrator"),(0,o.kt)("li",{parentName:"ul"},"Privileged Role administrator")),(0,o.kt)("h2",{id:"creating-the-sync"},"Creating the sync"),(0,o.kt)("p",null,"To create a synced group from AzureAD use a Terraform configuration like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'data "github_organization_team_sync_groups" "this" {}\n\nresource "github_team_sync_group_mapping" "example_group_mapping" {\n  team_slug        = "example"\n\n  dynamic "group" {\n    for_each = [for g in data.github_organization_team_sync_groups.this.groups : g if g.group_name == "some_team_group"]\n    content {\n      group_id          = group.value.group_id\n      group_name        = group.value.group_name\n      group_description = group.value.group_description\n    }\n  }\n}\n\n')),(0,o.kt)("h2",{id:"consuming-users-and-teams"},"Consuming users and teams"),(0,o.kt)("p",null,"Once Onboarded you can consume them via data resources."),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"github_team")," data resource for reading singular teams and the ",(0,o.kt)("inlineCode",{parentName:"p"},"github_teams")," data resource for reading multiple at once."),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"github_user")," data resource for reading singular users and the ",(0,o.kt)("inlineCode",{parentName:"p"},"github_users")," data resource for reading multiple at once."))}p.isMDXComponent=!0}}]);